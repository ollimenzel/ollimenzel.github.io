<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on The State of the Microsoft 365 Nation</title>
        <link>https://www.menzel.it/post/</link>
        <description>Recent content in Posts on The State of the Microsoft 365 Nation</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <lastBuildDate>Sun, 10 Mar 2024 10:59:06 +0000</lastBuildDate><atom:link href="https://www.menzel.it/post/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Deleting doublettes in SharePoint list with PnP PowerShell</title>
        <link>https://www.menzel.it/post/2024/03/finding-doublettes-sharepoint-list-pnp-powershell/</link>
        <pubDate>Sun, 10 Mar 2024 10:59:06 +0000</pubDate>
        
        <guid>https://www.menzel.it/post/2024/03/finding-doublettes-sharepoint-list-pnp-powershell/</guid>
        <description>&lt;img src="https://www.menzel.it/post/2024/03/finding-doublettes-sharepoint-list-pnp-powershell/Header-Image.jpeg" alt="Featured image of post Deleting doublettes in SharePoint list with PnP PowerShell" /&gt;In this blog post, I will break down a PnP PowerShell script that is designed to connect to a SharePoint site, retrieve a list of users from a specific SharePoint list (doublettes), identify duplicate users based on a unique identifier field, and then remove these duplicates. Of course you can use this script to remove any other kind of duplicate as well. Let&amp;rsquo;s dive into the details.
Step 1: Metadata Retrieval Set the tenant name and site name for the SharePoint site.</description>
        </item>
        <item>
        <title>Change SharePoint group to Security Groups with PowerShell</title>
        <link>https://www.menzel.it/post/2024/02/change-sharepoint-group-security-groups-powershell/</link>
        <pubDate>Mon, 12 Feb 2024 16:29:31 +0000</pubDate>
        
        <guid>https://www.menzel.it/post/2024/02/change-sharepoint-group-security-groups-powershell/</guid>
        <description>&lt;img src="https://www.menzel.it/post/2024/02/change-sharepoint-group-security-groups-powershell/Header-Image.png" alt="Featured image of post Change SharePoint group to Security Groups with PowerShell" /&gt;Automating SharePoint Permissions with PowerShell Managing SharePoint user permissions can be a complex and time-consuming task, especially for large organizations with numerous users and groups. Automation can significantly streamline this process, saving time and reducing the potential for errors. In this post, we&amp;rsquo;ll explore a PowerShell script that automates the management of SharePoint permissions by migrating users from SharePoint groups to EntraID Security Groups.
Why use Security groups instead of SharePoint permission groups?</description>
        </item>
        <item>
        <title>Social media content creator with AI Promts</title>
        <link>https://www.menzel.it/post/2024/01/social-media-content-creator-ai-prompts/</link>
        <pubDate>Sun, 28 Jan 2024 09:57:41 +0000</pubDate>
        
        <guid>https://www.menzel.it/post/2024/01/social-media-content-creator-ai-prompts/</guid>
        <description>&lt;img src="https://www.menzel.it/post/2024/01/social-media-content-creator-ai-prompts/Header-Picture.jpeg" alt="Featured image of post Social media content creator with AI Promts" /&gt;Prerequisites For this tutorial you need the following:
A premium Power Automate account, e.g. a Power Automate per user plan or an Powerapps Comunity Plan A Social Media Account, e.g. Twitter, Mastodon, LinkedIn, etc. The Flows from one of my previous posts Power Automate - How-to Posting on BlueSky and Mastodon Create AI Prompt in Power Platform Go to Power Automate
Click on AI hub in the left navigation Choose AI Prompts Click on Create text using custom prompt Choose Custom task with custom prompts and click on Create custom prompt Enter a name for your AI Prompt</description>
        </item>
        
    </channel>
</rss>
